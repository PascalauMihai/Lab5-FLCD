Production string: program1 listOfParameters2 compoundStatement2 statementList1 statement2 structStatement2 ifStatement1 condition1 expression1 simpleExpression3 RELATION1 expression1 simpleExpression3 andOrExpression2 andOrRelation1 expression1 simpleExpression3 RELATION1 expression1 simpleExpression3 compoundStatement2 statementList1 statement1 simpleStatement2 assignStatement1 expression1 simpleExpression3 returnStatement1 elseStatement1 compoundStatement2 statementList1 statement2 structStatement2 ifStatement1 condition1 expression1 simpleExpression3 RELATION1 expression1 simpleExpression3 andOrExpression1 compoundStatement2 statementList1 statement1 simpleStatement2 assignStatement1 expression1 simpleExpression3 returnStatement1 elseStatement1 compoundStatement2 statementList1 statement1 simpleStatement2 assignStatement1 expression1 simpleExpression3 returnStatement1 returnStatement1 returnStatement2 
Derivation string: (q, 0, [], [('program', 1)])
|- exp(q, 0, [('program', 1)], [['integer', 'mainFunction', '(', 'listOfParameters', ')', 'compoundStatement']])
|- adv(q, 1, [('program', 1), 'integer'], [['mainFunction', '(', 'listOfParameters', ')', 'compoundStatement']])
|- adv(q, 2, [('program', 1), 'integer', 'mainFunction'], [['(', 'listOfParameters', ')', 'compoundStatement']])
|- adv(q, 3, [('program', 1), 'integer', 'mainFunction', '('], [['listOfParameters', ')', 'compoundStatement']])
|- exp(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1)], [['oneParameter'], [')', 'compoundStatement']])
|- exp(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1)], [['type', 'identifier'], [')', 'compoundStatement']])
|- exp(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], [')', 'compoundStatement']])
|- exp(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], [')', 'compoundStatement']])
|- mi(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], [')', 'compoundStatement']])
|- at(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], [')', 'compoundStatement']])
|- mi(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], [')', 'compoundStatement']])
|- at(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], [')', 'compoundStatement']])
|- mi(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], [')', 'compoundStatement']])
|- at(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], [')', 'compoundStatement']])
|- at(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], [')', 'compoundStatement']])
|- exp(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType', '[', 'constant', ']'], ['identifier'], [')', 'compoundStatement']])
|- exp(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], [')', 'compoundStatement']])
|- mi(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], [')', 'compoundStatement']])
|- at(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], [')', 'compoundStatement']])
|- mi(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], [')', 'compoundStatement']])
|- at(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], [')', 'compoundStatement']])
|- mi(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], [')', 'compoundStatement']])
|- at(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType'], ['[', 'constant', ']'], ['identifier'], [')', 'compoundStatement']])
|- at(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], [')', 'compoundStatement']])
|- at(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1), ('oneParameter', 1)], [['type'], ['identifier'], [')', 'compoundStatement']])
|- at(b, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 1)], [['oneParameter'], [')', 'compoundStatement']])
|- at(q, 3, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2)], [['epsilon'], [')', 'compoundStatement']])
|- adv(q, 4, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon'], [[')', 'compoundStatement']])
|- adv(q, 5, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')'], [['compoundStatement']])
|- exp(q, 5, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 1)], [['epsilon']])
|- adv(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 1), 'epsilon'], [])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 1), 'epsilon'], [])
|- bk(b, 5, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 1)], [['epsilon']])
|- at(q, 5, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}']])
|- adv(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{'], [['statementList', 'returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1)], [['statement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1)], [['simpleStatement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2)], [['assignStatement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1)], [['identifier', '=', 'expression', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1)], [['identifier', '=', 'expression', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2)], [['assignStatement'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3)], [['declarationStatement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1)], [['oneParameter', ';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1)], [['type', 'identifier'], [';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], [';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], [';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], [';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], [';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], [';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType', '[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1)], [['type'], ['identifier'], [';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1)], [['oneParameter'], [';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2)], [['oneParameter', '=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1)], [['type', 'identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType', '[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1)], [['type'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2)], [['oneParameter'], ['=', 'simpleExpression', ';'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3)], [['declarationStatement'], ['returnStatement', '}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1)], [['simpleStatement'], ['returnStatement', '}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2)], [['structStatement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1)], [['compoundStatement'], ['returnStatement', '}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1)], [['epsilon'], ['returnStatement', '}']])
|- adv(q, 7, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon'], [['returnStatement', '}']])
|- exp(q, 7, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 1)], [['epsilon'], ['}']])
|- adv(q, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 1), 'epsilon'], [['}']])
|- mi(b, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 1), 'epsilon'], [['}']])
|- bk(b, 7, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 1)], [['epsilon'], ['}']])
|- at(q, 7, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 2)], [['return', 'constant', ';'], ['}']])
|- mi(b, 7, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 2)], [['return', 'constant', ';'], ['}']])
|- at(b, 7, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon'], [['returnStatement'], ['}']])
|- bk(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1)], [['epsilon'], ['returnStatement'], ['}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1)], [['compoundStatement'], ['returnStatement'], ['}']])
|- at(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2)], [['ifStatement'], ['returnStatement'], ['}']])
|- exp(q, 6, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1)], [['if', '(', 'condition', ')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 7, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if'], [['(', 'condition', ')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '('], [['condition', ')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1)], [['expression', 'RELATION', 'expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1)], [['simpleExpression'], ['RELATION', 'expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['RELATION', 'expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['RELATION', 'expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 1)], [[':<:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 1)], [[':<:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 2)], [[':<=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 2)], [[':<=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 3)], [[':==:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 3)], [[':==:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 4)], [[':!=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 4)], [[':!=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 5)], [[':>=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 5)], [[':>=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 6)], [[':>:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 6)], [[':>:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(b, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- bk(b, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 2)], [['constant'], ['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 2)], [['constant'], ['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 8, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3)], [['identifier'], ['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier'], [['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 9, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1)], [[':<:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 10, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:'], [['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 10, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1)], [['simpleExpression'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 10, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- bk(b, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2)], [['andOrRelation', 'expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2), ('andOrRelation', 1)], [[':&:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2), ('andOrRelation', 1)], [[':&:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2), ('andOrRelation', 2)], [[':|:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2), ('andOrRelation', 2)], [[':|:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(b, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2)], [['andOrRelation'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(b, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- bk(b, 10, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 10, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 2)], [['constant'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 10, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 2)], [['constant'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 10, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3)], [['identifier'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier'], [['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- bk(b, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2)], [['andOrRelation', 'expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 11, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1)], [[':&:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:'], [['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1)], [['simpleExpression'], ['RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 1)], [[':<:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 1)], [[':<:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 2)], [[':<=:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 2)], [[':<=:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 3)], [[':==:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 3)], [[':==:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 4)], [[':!=:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 4)], [[':!=:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 5)], [[':>=:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 5)], [[':>=:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 6)], [[':>:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 6)], [[':>:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(b, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['RELATION'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- bk(b, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['RELATION'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 2)], [['constant'], ['RELATION'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 2)], [['constant'], ['RELATION'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 12, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3)], [['identifier'], ['RELATION'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier'], [['RELATION'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 13, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1)], [[':<:'], ['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 14, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:'], [['expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 14, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1)], [['simpleExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 14, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 15, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 15, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- bk(b, 14, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 14, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 2)], [['constant'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 14, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 2)], [['constant'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- at(q, 14, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3)], [['identifier'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 15, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 16, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')'], [['compoundStatement', 'elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 16, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 1)], [['epsilon'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 1), 'epsilon'], [['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 1), 'epsilon', ('elseStatement', 1)], [['else', 'compoundStatement'], ['returnStatement'], ['}']])
|- mi(b, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 1), 'epsilon', ('elseStatement', 1)], [['else', 'compoundStatement'], ['returnStatement'], ['}']])
|- at(b, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 1), 'epsilon'], [['elseStatement'], ['returnStatement'], ['}']])
|- bk(b, 16, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 1)], [['epsilon'], ['elseStatement'], ['returnStatement'], ['}']])
|- at(q, 16, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{'], [['statementList', 'returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1)], [['statement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1)], [['simpleStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- at(b, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- at(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- at(b, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- at(b, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- at(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2)], [['assignStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 17, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1)], [['identifier', '=', 'expression', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 18, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier'], [['=', 'expression', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 19, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '='], [['expression', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 19, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1)], [['simpleExpression'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 19, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 20, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [[';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 20, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [[';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- bk(b, 19, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- at(q, 19, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 2)], [['constant'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- mi(b, 19, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 2)], [['constant'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- at(q, 19, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3)], [['identifier'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 20, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier'], [[';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 21, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';'], [['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 21, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1)], [['epsilon'], ['}'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 22, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon'], [['}'], ['elseStatement'], ['returnStatement'], ['}']])
|- adv(q, 23, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}'], [['elseStatement'], ['returnStatement'], ['}']])
|- exp(q, 23, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1)], [['else', 'compoundStatement'], ['returnStatement'], ['}']])
|- adv(q, 24, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else'], [['compoundStatement'], ['returnStatement'], ['}']])
|- exp(q, 24, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1)], [['epsilon'], ['returnStatement'], ['}']])
|- adv(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon'], [['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 1)], [['epsilon'], ['}']])
|- adv(q, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 1), 'epsilon'], [['}']])
|- mi(b, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 1), 'epsilon'], [['}']])
|- bk(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 1)], [['epsilon'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 2)], [['return', 'constant', ';'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 2)], [['return', 'constant', ';'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon'], [['returnStatement'], ['}']])
|- bk(b, 24, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1)], [['epsilon'], ['returnStatement'], ['}']])
|- at(q, 24, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}'], ['returnStatement'], ['}']])
|- adv(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{'], [['statementList', 'returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1)], [['statement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1)], [['simpleStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2)], [['assignStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1)], [['identifier', '=', 'expression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1)], [['identifier', '=', 'expression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2)], [['assignStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3)], [['declarationStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1)], [['oneParameter', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1)], [['type', 'identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType', '[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType'], ['[', 'constant', ']'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1), ('oneParameter', 1)], [['type'], ['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 1)], [['oneParameter'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2)], [['oneParameter', '=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1)], [['type', 'identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 1)], [['integer'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 2)], [['char'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1), ('simpleType', 3)], [['string'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 1)], [['simpleType'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType', '[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 1)], [['integer'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 2)], [['char'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1), ('simpleType', 3)], [['string'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2), ('userDefinedType', 1)], [['simpleType'], ['[', 'constant', ']'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1), ('type', 2)], [['userDefinedType'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2), ('oneParameter', 1)], [['type'], ['identifier'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3), ('declarationStatement', 2)], [['oneParameter'], ['=', 'simpleExpression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 3)], [['declarationStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1)], [['simpleStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2)], [['structStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1)], [['compoundStatement'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1)], [['epsilon'], ['returnStatement', '}'], ['returnStatement'], ['}']])
|- adv(q, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon'], [['returnStatement', '}'], ['returnStatement'], ['}']])
|- exp(q, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 1)], [['epsilon'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 1), 'epsilon'], [['}'], ['returnStatement'], ['}']])
|- mi(b, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 1), 'epsilon'], [['}'], ['returnStatement'], ['}']])
|- bk(b, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 1)], [['epsilon'], ['}'], ['returnStatement'], ['}']])
|- at(q, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 2)], [['return', 'constant', ';'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon', ('returnStatement', 2)], [['return', 'constant', ';'], ['}'], ['returnStatement'], ['}']])
|- at(b, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1), 'epsilon'], [['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- bk(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 1)], [['epsilon'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1), ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 1)], [['compoundStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2)], [['ifStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 25, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1)], [['if', '(', 'condition', ')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 26, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if'], [['(', 'condition', ')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '('], [['condition', ')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1)], [['expression', 'RELATION', 'expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1)], [['simpleExpression'], ['RELATION', 'expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['RELATION', 'expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['RELATION', 'expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 1)], [[':<:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 1)], [[':<:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 2)], [[':<=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 2)], [[':<=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 3)], [[':==:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 3)], [[':==:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 4)], [[':!=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 4)], [[':!=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 5)], [[':>=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 5)], [[':>=:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 6)], [[':>:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon', ('RELATION', 6)], [[':>:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- bk(b, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 2)], [['constant'], ['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 2)], [['constant'], ['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 27, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3)], [['identifier'], ['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier'], [['RELATION'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 28, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1)], [[':<:'], ['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 29, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:'], [['expression', 'andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 29, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1)], [['simpleExpression'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 29, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 31, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 31, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- bk(b, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2)], [['andOrRelation', 'expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2), ('andOrRelation', 1)], [[':&:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2), ('andOrRelation', 1)], [[':&:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2), ('andOrRelation', 2)], [[':|:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2), ('andOrRelation', 2)], [[':|:'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon', ('andOrExpression', 2)], [['andOrRelation'], ['expression', 'RELATION', 'expression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- bk(b, 29, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 29, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 2)], [['constant'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 29, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 2)], [['constant'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 29, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3)], [['identifier'], ['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier'], [['andOrExpression'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 30, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1)], [['epsilon'], [')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 31, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon'], [[')', 'compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 32, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')'], [['compoundStatement', 'elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 32, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 1)], [['epsilon'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 1), 'epsilon'], [['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 1), 'epsilon', ('elseStatement', 1)], [['else', 'compoundStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 1), 'epsilon', ('elseStatement', 1)], [['else', 'compoundStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 1), 'epsilon'], [['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- bk(b, 32, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 1)], [['epsilon'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 32, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{'], [['statementList', 'returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1)], [['statement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1)], [['simpleStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2)], [['assignStatement'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 33, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1)], [['identifier', '=', 'expression', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 34, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier'], [['=', 'expression', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 35, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '='], [['expression', ';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 35, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1)], [['simpleExpression'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 35, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 36, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [[';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 36, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [[';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- bk(b, 35, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 35, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 2)], [['constant'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 35, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 2)], [['constant'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 35, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3)], [['identifier'], [';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 36, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier'], [[';'], ['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 37, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';'], [['returnStatement', '}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 37, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1)], [['epsilon'], ['}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 38, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon'], [['}'], ['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 39, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}'], [['elseStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 39, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1)], [['else', 'compoundStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 40, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else'], [['compoundStatement'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 40, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1)], [['epsilon'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon'], [['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 1)], [['epsilon'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 42, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 1), 'epsilon'], [['}'], ['returnStatement'], ['}']])
|- mi(b, 42, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 1), 'epsilon'], [['}'], ['returnStatement'], ['}']])
|- bk(b, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 1)], [['epsilon'], ['}'], ['returnStatement'], ['}']])
|- at(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 2)], [['return', 'constant', ';'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon', ('returnStatement', 2)], [['return', 'constant', ';'], ['}'], ['returnStatement'], ['}']])
|- at(b, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1), 'epsilon'], [['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- bk(b, 40, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 1)], [['epsilon'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 40, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2)], [['{', 'statementList', 'returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{'], [['statementList', 'returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1)], [['statement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1)], [['simpleStatement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1), ('readStatement', 1)], [['readFromKeyboard', 'readInput', ';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 1)], [['readStatement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2), ('writeStatement', 1)], [['writeToKeyboard', 'writeOutput', ';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1), ('IOStatement', 2)], [['writeStatement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(b, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 1)], [['IOStatement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2)], [['assignStatement'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 41, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1)], [['identifier', '=', 'expression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 42, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier'], [['=', 'expression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 43, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '='], [['expression', ';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 43, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1)], [['simpleExpression'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 43, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 44, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [[';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 44, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1), 'epsilon'], [[';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- bk(b, 43, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 1)], [['epsilon'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 43, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 2)], [['constant'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- mi(b, 43, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 2)], [['constant'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- at(q, 43, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3)], [['identifier'], [';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 44, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier'], [[';'], ['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 45, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';'], [['returnStatement', '}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 45, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1)], [['epsilon'], ['}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 46, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon'], [['}'], ['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 47, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}'], [['returnStatement'], ['}'], ['returnStatement'], ['}']])
|- exp(q, 47, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1)], [['epsilon'], ['}'], ['returnStatement'], ['}']])
|- adv(q, 48, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon'], [['}'], ['returnStatement'], ['}']])
|- adv(q, 49, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}'], [['returnStatement'], ['}']])
|- exp(q, 49, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1)], [['epsilon'], ['}']])
|- adv(q, 50, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon'], [['}']])
|- mi(b, 50, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon'], [['}']])
|- bk(b, 49, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1)], [['epsilon'], ['}']])
|- at(q, 49, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 2)], [['return', 'constant', ';'], ['}']])
|- adv(q, 50, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 2), 'return'], [['constant', ';'], ['}']])
|- adv(q, 51, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 2), 'return', 'constant'], [[';'], ['}']])
|- adv(q, 52, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 2), 'return', 'constant', ';'], [['}']])
|- adv(q, 53, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 2), 'return', 'constant', ';', '}'], [])
|- succ(f, 53, [('program', 1), 'integer', 'mainFunction', '(', ('listOfParameters', 2), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 2), ('andOrRelation', 1), ':&:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 2), ('structStatement', 2), ('ifStatement', 1), 'if', '(', ('condition', 1), ('expression', 1), ('simpleExpression', 3), 'identifier', ('RELATION', 1), ':<:', ('expression', 1), ('simpleExpression', 3), 'identifier', ('andOrExpression', 1), 'epsilon', ')', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('elseStatement', 1), 'else', ('compoundStatement', 2), '{', ('statementList', 1), ('statement', 1), ('simpleStatement', 2), ('assignStatement', 1), 'identifier', '=', ('expression', 1), ('simpleExpression', 3), 'identifier', ';', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 1), 'epsilon', '}', ('returnStatement', 2), 'return', 'constant', ';', '}'], [])

